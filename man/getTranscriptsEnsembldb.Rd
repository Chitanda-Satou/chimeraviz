% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities.R
\name{getTranscriptsEnsembldb}
\alias{getTranscriptsEnsembldb}
\title{Retrieves transcripts for partner genes in a Fusion object using Ensembldb}
\usage{
getTranscriptsEnsembldb(fusion, edb)
}
\arguments{
\item{fusion}{The fusion object to find transcripts for.}

\item{edb}{The edb object used to fetch data from.}
}
\value{
An updated fusion object with transcript data stored.
}
\description{
This function will retrieve transcripts for both genes in a fusion. It will
check all transcripts and decide for each transcript if the fusion breakpoint
happens at 1) an exon boundary, 2) within an exon, or 3) within an intron.
This is done because fusions happening at exon boundaries are more likely to
produce biologically interesting gene products. The function returns an
updated Fusion object, where the fusion@geneA@transcriptsX slots are set with
transcript information.
}
\examples{
# Load fusion data and choose a fusion object:
defuseData <- system.file(
  "extdata",
  "defuse_833ke_results.filtered.tsv",
  package="chimeraviz")
fusions <- importDefuse(defuseData, "hg19", 1)
fusion <- getFusionById(fusions, 5267)
# Create edb object
edbSqliteFile <- system.file(
  "extdata",
  "Homo_sapiens.GRCh37.74.sqlite",
  package="chimeraviz")
edb <- ensembldb::EnsDb(edbSqliteFile)
# Add transcripts data to fusion object
fusion <- getTranscriptsEnsembldb(fusion, edb)
# The transcripts are now accessible through fusion@geneA@transcripts and
# fusion@geneB@transcripts .

}
