% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotTranscripts.R
\name{plotTranscripts}
\alias{plotTranscripts}
\title{Plot transcripts for each partner gene in a fusion event.}
\usage{
plotTranscripts(fusion, edb = NULL, bamfile = NULL,
  whichTranscripts = "exonBoundary", nonUCSC = TRUE, ylim = c(0, 1000),
  reduceTranscripts = FALSE)
}
\arguments{
\item{fusion}{The Fusion object to plot.}

\item{edb}{The edb object that will be used to fetch data.}

\item{bamfile}{The bamfile with RNA-seq data.}

\item{whichTranscripts}{This character vector decides which transcripts are
to be plotted. Can be "exonBoundary", "withinExon", "withinIntron",
"intergenic", or a character vector with specific transcript ids. Default
value is "exonBoundary".}

\item{nonUCSC}{Boolean indicating whether or not the bamfile used has UCSC-
styled chromosome names (i.e. with the "chr" prefix). Setting this to true
lets you use a bamfile with chromosome names like "1" and "X", instead of
"chr1" and "chrX".}

\item{ylim}{Limits for the coverage y-axis.}

\item{reduceTranscripts}{Boolean indicating whether or not to reduce all
transcripts into a single transcript for each partner gene.}
}
\value{
Creates a fusion transcripts plot.
}
\description{
This function takes a fusion object and an ensembldb object and plots
transcripts for both genes, showing which parts of each genes are included
in the fusion event. If the bamfile parameter is set, then the coverage is
plotted beneath the transcripts.
}
\examples{
# Load data and example fusion event
defuse833ke <- system.file(
  "extdata",
  "defuse_833ke_results.filtered.tsv",
  package="chimeraviz")
fusions <- importDefuse(defuse833ke, "hg19", 1)
fusion <- getFusionById(fusions, 5267)
# Load edb
edbSqliteFile <- system.file(
  "extdata",
  "Homo_sapiens.GRCh37.74.sqlite",
  package="chimeraviz")
edb <- ensembldb::EnsDb(edbSqliteFile)
# bamfile with reads in the regions of this fusion event
bamfile5267 <- system.file(
  "extdata",
  "fusion5267and11759reads.bam",
  package="chimeraviz")
# Temporary file to store the plot
pngFilename <- tempfile(
  pattern = "fusionPlot",
  fileext = ".png",
  tmpdir = tempdir())
# Open device
png(pngFilename, width = 500, height = 500)
# Plot!
plotTranscripts(
  fusion = fusion,
  edb = edb,
  bamfile = bamfile5267,
  nonUCSC = TRUE)
# Close device
dev.off()

}

